name: Documentation

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    name: Build

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-22.04

    steps:
      - name: Check out the Repository
        uses: actions/checkout@v4
        with:
          # See: https://github.com/actions/checkout/issues/206
          # See: https://github.com/actions/checkout/issues/1471
          fetch-depth: 0
          fetch-tags: true

      - name: Cache `venv`
        uses: actions/cache@v3
        id: venv-cache
        with:
          path: .venv
          key: ${{ github.workflow }}-venv-${{ matrix.os }}-python${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install `poetry==1.6.1`
        run: pipx install poetry==1.6.1

      - name: Configure `poetry`
        run: poetry config virtualenvs.in-project true

      - name: Install `python==3.10`
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.10"

      - name: Configure `pip`
        run: python -m pip config set global.disable-pip-version-check true

      - name: Install Dependencies
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: poetry install --with docs

      - name: Build Docs
        id: build-docs
        run: |
          modified=$(poetry run make -C docs html \
            | grep -o '^\[deploy_docs.py\] Modified files: .*$' \
            | cut -d ' ' -f 4-)

          IFS=' ' read -ra file_array <<< "$modified"

          echo "### Built Documentation:" >> $GITHUB_STEP_SUMMARY
          for file in "${file_array[@]}"; do
            echo "$file" >> $GITHUB_STEP_SUMMARY
          done

          artifacts_dir="artifacts"

          if [ -d "$artifacts_dir" ]; then
            rm -rf "$artifacts_dir"
          fi

          mkdir -p "$artifacts_dir"

          for file in "${file_array[@]}"; do
            cp -ar "$file" "$artifacts_dir"
          done

          echo "artifacts_dir=${artifacts_dir}" >> $GITHUB_OUTPUT

      - name: Upload Documentation Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ${{ steps.build-docs.outputs.artifacts_dir }}

    outputs:
      artifacts_dir: ${{ steps.build-docs.outputs.artifacts_dir }}

  deploy:
    name: Deploy
    needs: build

    permissions:
      contents: write
      pages: write
      id-token: write

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-22.04

    steps:
      - name: Check out the Repository
        uses: actions/checkout@v4
        with:
          # See: https://github.com/actions/checkout/issues/206
          # See: https://github.com/actions/checkout/issues/1471
          fetch-depth: 0
          fetch-tags: true

      - name: Cache `venv`
        uses: actions/cache@v3
        id: venv-cache
        with:
          path: .venv
          key: ${{ github.workflow }}-venv-${{ matrix.os }}-python${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install `poetry==1.6.1`
        run: pipx install poetry==1.6.1

      - name: Configure `poetry`
        run: poetry config virtualenvs.in-project true

      - name: Install `python==3.10`
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.10"

      - name: Configure `pip`
        run: python -m pip config set global.disable-pip-version-check true

      - name: Install Dependencies
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: poetry install --with docs

      - name: Download Docs Artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ${{ needs.build.outputs.artifacts_dir }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ${{ needs.build.outputs.artifacts_dir }}
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          full_commit_message: ${{ github.event.head_commit.message }}
          keep_files: true
