{
    "[markdown]": {
        "editor.codeActionsOnSave": {
            "source.fixAll.markdownlint": "explicit"
        },
        "editor.defaultFormatter": null,
        "editor.formatOnPaste": true,
        "editor.formatOnSave": true,
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 90
    },
    "[python]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        },
        "editor.defaultFormatter": "ms-python.python",
        "editor.formatOnSave": true,
        "files.trimTrailingWhitespace": true
    },
    "[restructuredtext]": {
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 90
    },
    "[yaml]": {
        "editor.formatOnSave": true,
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 90
    },
    "autoDocstring.docstringFormat": "numpy",
    "editor.acceptSuggestionOnEnter": "off",
    "editor.formatOnSave": false,
    "editor.rulers": [
        90
    ],
    "editor.tabCompletion": "on",
    "esbonio.sphinx.buildDir": "${workspaceFolder}\\docs\\build",
    "esbonio.sphinx.confDir": "${workspaceFolder}\\docs\\src",
    "esbonio.sphinx.forceFullBuild": false,
    "explorer.compactFolders": false,
    "files.exclude": {
        "**/.git": false
    },
    "files.insertFinalNewline": true,
    "git-graph.referenceLabels.alignment": "Branches (aligned to the graph) & Tags (on the right)",
    "markdownlint.config": {
        "MD033": false, // Some HTML is fine
        "MD041": false, // Allow non-headings for first line in file
        "MD046": false // Allow indented code blocks  (M029 errors otherwise)
    },
    "markdownlint.ignore": [
        ".venv/*.md",
        ".actrc"
    ],
    "mypy-type-checker.args": [
        "--config-file=pyproject.toml"
    ],
    "powershell.integratedConsole.showOnStartup": false,
    "powershell.powerShellDefaultVersion": "PowerShell Core 7 (x64)",
    "python.analysis.diagnosticMode": "openFilesOnly",
    "python.analysis.diagnosticSeverityOverrides": {
        // `pyright` cannot differentiate between actual import cycles and
        // those hidden under `typing.TYPE_CHECKING`
        //
        // See Issue #531: https://github.com/microsoft/pylance-release/issues/531
        "reportImportCycles": "none",
        "reportPrivateImportUsage": "information",
        // Below is untrue if you are trying to intentionally raise a runtime error
        "reportUnnecessaryIsInstance": "none"
    },
    "python.analysis.typeCheckingMode": "off",
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/Scripts/python.exe",
    "python.languageServer": "Pylance",
    "python.terminal.activateEnvInCurrentTerminal": true,
    "python.terminal.activateEnvironment": true,
    "python.testing.pytestArgs": [
        "${workspaceFolder}/tests"
    ],
    "python.testing.pytestEnabled": true,
    "python.testing.pytestPath": "${workspaceFolder}/.venv/Scripts/pytest.exe",
    "restructuredtext.linter.disabledLinters": [
        "doc8",
        "rst-lint"
    ],
    "restructuredtext.linter.rstcheck.executablePath": "${workspaceFolder}/.venv/Scripts/rstcheck.exe",
    "restructuredtext.linter.rstcheck.extraArgs": [
        "--config",
        "pyproject.toml"
    ],
    "ruff.organizeImports": false,
    "runOnSave.commands": [
        {
            "command": ".venv\\Scripts\\pyupgrade --py38-plus ${file}",
            "finishStatusMessage": "Finished pyupgrade",
            "match": ".*\\.pyi?$",
            "runIn": "backend",
            "runningStatusMessage": "Running pyupgrade"
        },
        {
            "command": ".venv\\Scripts\\pycln ${file} --config=pyproject.toml",
            "finishStatusMessage": "Finished pycln",
            "runIn": "backend",
            "runningStatusMessage": "Running pycln"
        }
    ],
    "trailing-spaces.syntaxIgnore": [
        "markdown"
    ],
    "trailing-spaces.trimOnSave": true,
    "python.formatting.provider": "none"
}
